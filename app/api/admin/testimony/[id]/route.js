// üîí /api/admin/testimony/[id]
import { NextResponse } from "next/server";
import dbConnect from "@/lib/dbConnect";
import Testimony from "@/models/Testimony";
import { getToken } from "@/lib/auth";

export const DELETE = async (req, context) => {
  try {
    await dbConnect();

    // V√©rification du token admin
    const admin = await getToken("admin", req);
    if (!admin) {
      return NextResponse.json({ message: "Non autoris√©" }, { status: 401 });
    }

    // R√©cup√©rer l'ID de l'URL dynamique
    const { id } = context.params; // Utiliser `context.params` pour obtenir l'ID de mani√®re asynchrone

    // Supprimer le t√©moignage par son ID
    const deleted = await Testimony.findByIdAndDelete(id);

    if (!deleted) {
      return NextResponse.json({ message: "T√©moignage introuvable" }, { status: 404 });
    }

    return NextResponse.json({ message: "T√©moignage supprim√©" }, { status: 200 });
  } catch (err) {
    console.error("Erreur DELETE t√©moignage :", err);
    return NextResponse.json({ message: "Erreur serveur" }, { status: 500 });
  }
};
